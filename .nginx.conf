
# remove www
server 
{
	listen   [::]:80;
	server_name www.phpguide.co.il;
	rewrite ^ $scheme://phpguide.co.il$request_uri redirect;
}




server 
{
	#listen   80; ## listen for ipv4; this line is default and implied
	listen   [::]:80; ## default ipv6only=on; ## listen for ipv6

	gzip on;
	index index.php;
	
	server_name phpguide.co.il;
	root /home/www/phpguide;
	charset utf-8;

	client_max_body_size 1m;



	location ~ /build\.xml
	{
		deny all;
		access_log off;
		log_not_found off;
		break;
	}

	# redirect styles
	rewrite "^/static/(styles|scripts|images)/([a-z0-9]*)\.[0-9]*\.(css|js|png|gif|jpg|jpeg|bmp|ico)$" /static/$1/$2.$3;



	# YiiFramework rules
    # Block access to protected, framework, and nbproject (artifact from Netbeans)

    location ~ /(protected|framework|nbproject|\.idea) {
        deny all;
        access_log off;
        log_not_found off;
		break;
    }

    # Block access to theme-folder views directories
    location ~ /themes/\w+/views {
        deny all;
        access_log off;
        log_not_found off;
		break;
    }

    # Attempt the uri, uri+/, then fall back to yii's index.php with args included
    # Note: old examples use IF statements, which nginx considers evil, this approach is more widely supported
    location / {
        try_files $uri $uri/ /static/$uri /index.php?$args;
	break;
    }
    
    # END yiiframework.conf



    #Tell browser to cache image files for 24 hours, do not log missing images
    # I typically keep this after the yii rules, so that there is no conflict with content served by Yii

    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ 
    {
        expires 1M;
        add_header Vary Accept-Encoding;
        log_not_found off;
		break;
    }







	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	
	# Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac), .gitignore and others.

	location ~ /\.
	{
		deny all;
		access_log off;
		log_not_found off;
	}





	location ~ \.php$ 
	{
		# Filter out arbitrary code execution
		location ~ \..*/.*\.php$ {return 404;}

		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		# NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
	
		fastcgi_param  PATH_INFO        $fastcgi_path_info;

		include fcgi_params;	
		fastcgi_pass unix:/tmp/php.socket;
		fastcgi_index index.php;
		break;
	}




}
