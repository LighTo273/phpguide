<!-- First Text - First Page-->

<table style="width:1024px; margin:50px auto;">
    <tr>
        <td valign="top" class="container-first-text">

            <div style="margin-top:-80px;">

                <p>
    <span class="font-green" >
    מוכן ללמוד oop?
    <br />
    </span>

                    <br/><br/><br/>
    <span class="dark">
סוף סוף הספר הראשון שמסביר oop בעברית פשוטה, בצורה מלאה עם הסברים ברורים ודוגמאות קוד קצרות מאפס ב-PHP.
    </span>
                </p>

            </div>

        </td>
        <td style="width:620px"> <img src="http://s10.postimg.org/r7mf4kyc9/3dcover2.jpg" alt="OOP from zero"/> </td>
    </tr>
</table>





<!-- Second Text - First Page-->

<div class="container-second-text">
<div class="row-fluid">
<div class="span12" dir="rtl">


<p dir="RTL">בין אם החלטת ללמוד תכנות מונחה עצמים או בין אם אתה עדיין רק חושב על זה &ndash; אתה בכיוון הנכון. תכנות מונחה עצמים הפך לשיטת העבודה המועדפת על מליוני מתכנתים מסביב לעולם שעובדים עם מעל לשלושים שפות תכנות שונות. תכנות מונחה עצמים הוא לא רק כלי, אלא תפיסת עולם שחוסכת עשרות אלפי דולרים לחברות קטנות וגדולות, ואלפי שורות קוד למתכנתים בפרויקטים מכל הגדלים.</p>

<p dir="RTL">עם זאת, לתכנות מונחה עצמים יש חסרון בולט; מתכנתים רבים, בשנים הראשונות של דרכם, מוצאים את כל הנושא למסובך ולא ברור. יכול להיות שעלו לך אחת או כמה מן השאלות הלגיטימיות הבאות:</p>

<ul dir="rtl" class="blue">
    <li>בשביל מה צריך <span dir="LTR">OOP</span>, הרי אפשר להסתדר גם בלעדיו?</li>
    <li>מה עם ביצועים? האם הם נופלים והקוד נהיה איטי יותר?</li>
    <li>מה לגבי אורך הקוד? האם יש צורך ביותר שורות קוד על מנת לקבל את אותה התוצאה?</li>
    <li>האם הקוד הופך להיות מסובך יותר וקשה לשינוי בעתיד?</li>
    <li>הנושא קשה להבנה, למרות כל המדריכים הקיימים</li>
</ul>

<p dir="RTL">אלו הם רק חלק מהשאלות שמתכנתים מתחילים או מתקדמים שואלים מדי חודש בפורומים ובאתרי הלימוד. אותן השאלות חוזרות על עצמן מדי חודש ממתכנת למתכנת, מפורום לפורום ואחרי שש שנים של צפיה ועזרה בפורומים &ndash; הגיע הזמן לענות עליהן אחת ולתמיד.</p>

<h2 dir="RTL">אני, אלכס רסקין, הולך לענות על כל השאלות האלה ולא רק.</h2>

<p dir="RTL"><img src="file:///C:\Users\Sasha\AppData\Local\Temp\msohtmlclip1\01\clip_image001.jpg" /> למעלה מעשר שנות ניסיון בתכנות ולמעלה משש שנים של צפיה במתכנתים מתחילים ובינוניים שנופלים על אותן ואותן הטעויות, קוראים את אותן פיסות המדריכים באינטרנט ושואלים מחדש את אותן השאלות הראו לי בדיוק מה הן הבעיות הנפוצות והקשיים שמתכנתים נתקלים בהם.</p>

<p dir="RTL">אחרי למעלה ממאה מדריכי <span dir="LTR">PHP</span>, יותר מאלף תשובות לשאלות כלליות שנענו באתר ועשרות כנסים והרצאות, הגיע הזמן לענות גם על השאלות החשובות של תכנות מונחה עצמים.</p>

<p dir="RTL">כמו ממורה לאומנויות לחימה, תוכל ללמד משהו מעבר לפרטים הטכניים של תכנות מונחה עצמים. אני רוצה להראות לך את הפילוסופיה שעומדת מאחורי זה; את תפיסת העולם ונקודות המבט שעוזרות לבנות מערכות גדולות ואתרים עם אלפי כניסות; טיפים שמתגלים על בשרם של פרויקטים גדולים; ואת מה שאף אחד לא סיפר לי כשאני התחלתי.</p>

<p dir="RTL">&nbsp;</p>

<p dir="RTL">&nbsp;</p>

<h2 dir="RTL">למה בכלל לדעת תכנות מונחה עצמים</h2>

<p dir="RTL">מעבר לתכנות מונחה עצמים הוא אחד השלבים החשובים בתהליך ההתקדמות שלך, בין אם אתה רוצה למצוא עבודה בתחום, ובין אם אתה רוצה לכתוב קוד טוב יותר ולהבין קוד של אנשים אחרים.</p>

<p dir="RTL"><strong>המעבר לתכנות מונחה עצמים מזכיר מעבר מעבודה עם קבצים לעבודה עם מסד נתונים.</strong> אין ספק שעבודה עם מסד נתונים הרבה יותר קשה ומסובכת מאשר עבודה עם קבצים. יש צורך ללמוד שפה חדשה, להתקין תוכנות נוספות וללמוד חומר רב. בכל זאת, רובינו עשינו, או נעשה, את המעבר הזה.</p>

<p dir="RTL">בדיוק כמו מעבר לשימוש במסד נתונים, גם מעבר לכתיבה מונחית עצמים היא תהליך שדורש למידה וצבירת ידע חדש. למען האמת, המעבר ל-<span dir="LTR">OOP</span> הרבה יותר קל ממעבר למסד נתונים, ואם זאת, מביא איתו לא פחות יתרונות.</p>

<p dir="RTL">קוד שכתוב בצורה מונחית עצמים בדרך כלל מתבצע מהר יותר וגם נכתב מהר יותר, הוא קל יותר להבנה ומאפשר עבודת צוות קלה יותר. יתרון נוסף הוא ניצול חוזר של קוד בין פרויקט לפרויקט. יותר לא תצטרך לכתוב מחדש את מנגנון ההרשמה והזדהות לכל אתר חדש שתבנה.</p>

<h2 dir="RTL">תכנות מונחה עצמים הוא שלב נוסף בתהליך הלימוד שלך</h2>

<p dir="RTL">אם תביט אחורה תוכל לראות שלבים מסוימים שעברת בדרך ושדרוגים שעשית:</p>

<ul dir="rtl" class="blue">
    <li>מקבצים למסד נתונים</li>
    <li>משכפול קוד בין עמודים ל-<span dir="LTR">include</span></li>
    <li>מריענון עמודים ל-<span dir="LTR">ajax</span></li>
    <li>מבלגן בקוד לפונקציות מסודרות</li>
    <li>מקובץ אחד שנגיש לדפדפן לקבצים רבים שמכילים פונקציות שונות</li>
    <li>מ-<span dir="LTR">Notepad</span> לעורך קוד מתקדם יותר</li>
</ul>

<p dir="RTL">יכול להיות שעוד לא הגעת או כבר הגעת ועברת חלק מהשלבים הבאים:</p>

<ul dir="rtl" class="blue">
    <li>כתיבת מערכת לניהול תוכן שמאפשרת לערוך את האתר בלי לערוך את הקוד</li>
    <li>יצירת מחלקות</li>
    <li>שימוש בפריימוורק</li>
    <li>שינוי פריימוורק</li>
    <li>למידה של שפת תכנות נוספת (מלבד <span dir="LTR">JavaScript</span>)</li>
</ul>

<p dir="RTL">יכול להיות ששלבים מסוימים נראים לך רחוקים או לא מעניינים כרגע או שתבחר ללכת בדרך אחרת לגמרי בקריירת התכנות שלך. רוב המתכנתים עוברים את השלבים האלה בסדר כזה או אחר ותכנות מונחה עצמים הוא צעד אחד מהתהליך הזה.</p>

<p dir="RTL">אם לא עברת את חמשת השלבים הראשונים&ndash; החומר שלי לא מתאים בשבילך. לאומת זאת, אם אתה בדרך אל או כבר באחד מהשלבים המתקדמים &ndash; התכנים שלי יעזרו לך להשיג תוצאות <strong>שלמתכנתים אחרים לוקח בין שלוש לחמש שנים</strong> להשיג. אני לא מדבר על ידע תאורטי, אלא על דרך מחשבה נכונה, מניעת שגיאות לפני הופעתן, עבודת צוות נכונה, סדר וכללים מקובלים ועוד הרבה דברים אחרים.</p>

<p dir="RTL">יתרון נוסף שמתגלה בשלב התכנות מונחה עצמים הוא קפיצת מדרגה ביעילות.</p>

<h2 dir="RTL">המהירות עולה &ndash; לא רק של האתר, אלא גם של המתכנת</h2>

<p dir="RTL">למרות הדעה הרווחת, אתר שכתוב בצורה מונחית עצמים לא מפסיד למקבילו הפרוצדורלי. שלושת הגרסאות האחרונות של <span dir="LTR">php</span> מגיעות עם שיפורים מתמידים בפן הביצועי, מה שמעלים כמעט לגמרי את הפרשי הביצועים ולהיפך, במקרים מסוימים הופך את הקוד המונחה עצמים למהיר יותר בזכות פענוח מוקדם. שפות אחרות, כמו <span dir="LTR">C#</span> ו-<span dir="LTR">Java</span>, בכלל לא מאפשרות צורת עבודה שונה ומחייבות את המתכנת לכתוב קוד מונחה עצמים.</p>

<p dir="RTL">שיפור נוסף חל גם בביצועים שלך בתור מתכנת. מתכנתים רבים גילו שכתיבת קוד בצורת <span dir="LTR">OOP</span> קלה ומהירה יותר בזכות תמיכה טובה יותר של עורכי קוד ומבנה תוכנה ברור יותר. הצורך בדילוג בין קבצים והסתמכות על הזיכרון קטנים ולך נשאר זמן רב יותר להתמקד בדברים החשובים לאתר, במקום לבדוק פרמטרים או אינדקסים של מערכים בקבצים אחרים.</p>

<p dir="RTL">כל זה קורה <strong>למרות העובדה שקוד הבנוי בצורת </strong><strong><span dir="LTR">OOP</span></strong><strong> בדרך כלל ארוך יותר</strong>, אך לא בהרבה. תמיכה של עורכי קוד מודרניים מסוגלת לחסוך זמן והקלדה רבה, ופתרונות כמו טעינת קבצים אוטומטית עם <span dir="LTR">autoloading</span> מורידים ממך חצי מהעבודה. כמה שזה נשמע מוזר, הקוד יוצא ארוך יותר, אך בכל זאת, קל יותר לכתיבה; בדיוק כפי שמטוס בואינג עצום כבד יותר ממטוס זעיר פרטי, אך מסוגל להגיע למהירויות גבוהות בהרבה.</p>

<p dir="RTL">סיבה נוספת לעליה במהירות היא האינטואיטיביות שתכנות מונחה עצמים מביא לתמונה.</p>

<h2 dir="RTL">המוח שלנו עובד בצורה מונחית עצמים</h2>

<p dir="RTL">הבט מסביבך. מה אתה רואה? מה שזה לא יהיה, ארון או דב גריזלי, חשוב להבין שזו הפשטה. כל מה שמקיף אותנו הוא, בסופו של דבר, אוסף של חלקיקים ומולקולות קטנות. המוח שלנו משתמש בהפשטות על ימין ועל שמאל כדי להרכיב חפצים מחלקיקים קטנים יותר.</p>

<p dir="RTL">העולם האמיתי מורכב מאובייקטים ולכן זה הגיוני שגם התוכנה תורכב מאובייקטים. ארון הוא הפשטה של קרשים ושל מסמרים שהם, בתורם, הפשטה של סיבי עץ ושל מתכת. בצורה דומה, משתמש הוא הפשטה של כתובת אימייל ושל סיסמה, שהם, בתורם, אוסף של אותיות ושל מספרים.</p>

<p dir="RTL">מחקרים מראים שאנחנו, בתור בני אדם, מסוגלים לעבוד עם חמישה עד תשעה פריטים בזיכרון הזמני שלנו. מכאן נובע שככל שנשתמש יותר בהפשטות, כך נבזבז פחות זמן וכוח מנטלי על זכירת דברים מיותרים. בשורה התחתונה, תכנות מונחה עצמים הופך את הקוד ליותר אינטואיטיבי בשבילך ובשביל מתכנתים אחרים באמצעות הפשטות, גם אם כרגע <span dir="LTR">OOP</span> נראה מסובך מדי או מוסבר בצורה לא ברורה.</p>

<h2 dir="RTL">מה שאמרו גולשי האתר אחרי שלמדו תכנות מונחה עצמים:</h2>

<p dir="RTL">


    <img src="http://s24.postimg.org/y2ba3tu9h/Screenshot_1.png" />
    <br/><br/>
    <img src="http://img707.imageshack.us/img707/327/7t66.png" />

    <br/><br/>


    בלי הסבר טוב תכנות מונחה עצמים נכון הוא לא סיפור קל. עם זאת, מי שמצליח לעבור את שלב הלימוד זוכה ליתרונות עצומים שתכנות מונחה עצמים פותח בפניו. עם קצת הכוונה אפשר להגיע לשם.

</p>

<h2 dir="RTL">הדרך הכי מהירה ליעד היא כשמישהו אחר מחזיק לך את היד ומוביל.</h2>

<h2 dir="RTL">למעלה מ-200 שעות השקעה בהסברים על עשרות נושאים במקום אחד.</h2>

<p dir="RTL">כל ספורטאי מקצועי יידע לספר לך על החשיבות של מאמן צמוד; כל עורך דין וכל רופא מחויב לעבוד כמה שנים בצמוד לאיש מקצוע מומחה; מתכנתים, לעומת זאת, חושבים שאפשר ללמוד ממדריכים באינטרנט. הטענה הזו נכונה עד רמה מסוימת, בדיוק כפי שרופאים ועורכי דין לומדים מספרים בתחילת דרכם, אבל <strong>מדריכים לא מסוגלים להעביר את כל הידע הנדרש</strong>.</p>

<p dir="RTL">המדריך הכי ארוך שתוכל למצוא יכסה לא יותר מ-10% מכלל הנושאים הטכניים, בלי שייגע בנושאים עקיפים, כמו תכנון, עבודת צוות או איכות. בספר הזה מחכים לך כ-100 עמודים שנוצרו כתוצאה מ-200 שעות השקעה, כתיבה, עריכה ובדיקה שכוללים את ההסברים הכי פשוטים ומקיפים שאי פעם נכתבו בשפה העברית.</p>

<p dir="RTL">הספר הזה דן בסוגיות העיקריות של תכנות מונחה עצמים ותכנון נכון של פרויקט על פני הפרקים השונים:</p>

<ul dir="rtl" class="green">
    <li>מה נפל על הראש למי שהמציא אובייקטים או מבוא לתכנות מונחה עצמים</li>
    <li>מילים חדשות בלקסיקון</li>
    <li>זה מה שתענה כשישאלו אותך על יתרונות <span dir="LTR">OOP</span></li>
    <li>המילה הכי חשובה בספר הזה: <span dir="LTR">Interface</span></li>
    <li>מחדירים חיים למחלקות</li>
    <li>הוקוס פוקוס <span dir="LTR">magic methods</span></li>
    <li><span dir="LTR">Stand still! - static</span></li>
    <li><span dir="LTR">Traits</span> או קופי פייסט עם ירושה כפולה</li>
    <li>ניימספייסים או למה ללכת מכות</li>
</ul>

<p dir="RTL">כל פרק אוסף לא רק את התיאוריה שמאחורי הנושא המסוים, אלא גם תובנות שמגיעות כתוצאה מעשר שנות ניסיון, מאות פרויקטים ועשרות אלפי שורות קוד. זהו הספר היחידי שלא רק מסביר כל נושא, אלא מראה דוגמאות כיצד להשתמש או למה לא להשתמש בדברים מסוימים.</p>

<p dir="RTL">רוב המתכנתים אפילו לא חושבים עד כמה בעייתי יכול להיות שימוש במתודות קסם בשביל האתר שלהם או בשביל הצוות שלהם או למה אינטרפייס הוא החלק החשוב ביותר בתכנות מונחה עצמים. את מרבית הדברים האלו לא ניתן ללמוד מתוך מדריכים באינטרנט.</p>

<p dir="RTL">אם זה לא מספיק, בסוף כל פרק תמצא מדור שאלות-תשובות שעונה על השאלות הנפוצות שיכולות לעלות לך ושאלות שנשאלות כל פעם מחדש בפורומים. כמה מהשאלות שהספר עונה עליהם:</p>

<ul dir="rtl" class="green">
    <li>אילו סוגי מחלקות קיימות ומה ההבדל ביניהן</li>
    <li>מתי יש ליצור שני מחלקות ומתי מספיק להשתמש במאפיין כדי להבדיל ביניהן</li>
    <li>כמה ירושה זה יותר מדי</li>
    <li>מה לעשות אם במחלקת האב יש מתודה שלא צריכה להיות במחלקה היורשת</li>
    <li>איך להחליט האם מחלקה צריכה להיות אבסטרקטית</li>
    <li>למה לא להגדיר הכל בתור <span dir="LTR">public</span></li>
    <li>מתי להשתמש ב-<span dir="LTR">final</span></li>
    <li>מה ההבדל בין אינטרפייס למחלקה אבסטרקטית</li>
    <li>האם עלי בכל זאת להשתמש במרחבי שמות, גם אם אני על אי בודד</li>
</ul>

<p dir="RTL">הספר עונה בהרחבה על כל אחת מאלו ועל עוד עשרות שאלות אחרות שיעלו במהלך לימוד תכנות מונחה העצמים. שאלות אחרות שלא נמצאות בספר, תמיד תוכל לשאול אותי ואת קהילת המתכנתים הישראלית באמצעות האתר <span dir="LTR">phpguide.co.il</span> .</p>

<h2 dir="RTL">תמיכה מהאתר הישראלי ללימוד <span dir="LTR">PHP</span></h2>

<p dir="RTL">האתר <span dir="LTR">phpguide</span> מכיל למעלה מ-200 מדריכים מכל הרמות על עשרות נושאים הקשורים לתכנות ב-<span dir="LTR">PHP</span>. מאז 2009 חברי הקהילה שאלו וענו על למעלה מ-1000 שאלות בכל נושא אפשרי הקשור לפיתוח אתרים. זהו האתר הכי גדול והכי פעיל באינטרנט הישראלי, שכולו מוקדש לפיתוח אתרים ב-<span dir="LTR">PHP</span>. בסיום קריאת הספר הוא ולמעלה מ-500 מפתחים רשומים יעמדו לרשותך כדי לענות על שאלות ולעזור לך בהמשך הדרך בכל שאלה שתעלה לך בכל נושא שהוא; תכנות מונחה עצמים, ביצועים, מבנה ותכנון, צד לקוח או אבטחה.</p>

<p dir="RTL">בשונה מספר שנקנה בחנות ספרים, הספר והקורס המלא הזה מגיעים עם תמיכה קהילתית מאחוריהם ומבוססים על שאלות ותהליך הלימוד האמיתי שעוברים מתכנתים שונים במהלך הקריירה שלהם.</p>

<h2 dir="RTL">גם אם אתה כבר יודע הכל על מחלקות, על מתודות ועל מאפיינים</h2>

<p dir="RTL">לא תאמין כמה אנשים מגיעים לראיונות עבודה עם ארבע, חמש ושש שנות ניסיון ולא יודעים שום דבר על תלויות בין מחלקות, על מרחבי שמות, על המטרה האמיתית של אינטרפייסים, על הבעיות שמתודות קסם יוצרות או פשוט על סוגי המחלקות השונות, כמו <span dir="LTR">DTO, BO</span> ו-<span dir="LTR">DAL</span>.</p>

<p dir="RTL">הנושאים האלו מופיעים ברשימת השאלות של המראיינים ובמבחני ההסמכה השונים הרבה לפני השאלות על איכות קוד, מניעת טעויות ועבודת צוות נכונה. תחשוב שתשובה נכונה לכל שאלה מזכה אותך בכמעט 1000 ש&quot;ח מדי חודש בתלוש המשכורת היות שההבדל במשכורת בין מתכנת שלא יודע את הדברים האלו לבין אחד שיודע יכול להיות כמעט כפליים.</p>

<p dir="RTL">לפי טבלאות שכר, מתכנת מתחיל שלא יודע שום דבר מזה יוכל לקבל משכורת של <span dir="LTR">8k</span> בחודש, לאומת זאת משכורת של מתכנת בכיר מגיע ל-<span dir="LTR">25k</span> . וזה הזמן לספר לך על אחד מחברי שלא מלאו לו 18, אין לו תעודת בגרות, הוא לא ביקר באף שיעור אחרי כיתה י&#39; ומקבל משכורת חמש-ספרתית. ההבדל בינו לבין מתכנתים אחרים הוא מה שהוא יודע והעובדה שכל יום הוא ממשיך ללמוד, גם אם מדובר בדבר אחד קטן מדי יום פה ושם.</p>

<h2 dir="RTL">ההשקעה הכי טובה שאי פעם תוכל לעשות</h2>

<p dir="RTL">רוב האנשים סבורים שההשקעה הכי טובה שיוכלו לעשות בחייהם היא קניית דירה או רכוש אחר. רוב האנשים לא מספיק חכמים, רוב האנשים לא מקבלים משכורת מעל לממוצעת, ולא בונים אתרים כמו פייסבוק וטוויטר. לאומת זאת, האנשים המצליחים מבינים ומסכימים על דבר אחד: <strong>ההשקעה הכי טובה שתוכל אי פעם לעשות היא השקעה בעצמך. </strong></p>

<p dir="RTL">ידע וניסיון שתרכוש היום מסוגלים להחזיר אחוזים עצומים על ההשקעה <strong>לאורך כל משך חייך</strong>.ידע שתרכוש היום ישפיע בצורה ישירה על גובה המשכורת שלך, על סיכויי ההצלחה של הסטארטאפ שלך ועל איכות האתר שלך. השקעה של כמה שקלים בספרים או בקורס מלא תוחזר אליך בשבוע הראשון של תלוש המשכורת החדש שלך, בפרויקט הפרילנס הראשון שתעשה או בצורת זמן ועצבים שלא תצטרך לבזבז יותר סתם.</p>

<p dir="RTL">מתי
    בפעם האחרונה השקעת בעצמך?
<!--
    אם אתה מוכן להשקיע בעצמך, הנה שני אפשרויות:
    -->
</p>

<div class='propositionBlock'>
    <!-- אופציה א' -->
    <h3>
        תכנות מונחה עצמים מאפס – הספר
    </h3>
    <p>
        הספר הכי פשוט והכי ברור על תכנות מונחה עצמים מהכי התחלה. כל נושא תכנות מונחה העצמים בשפת PHP במקום אחד עם הסברים פשוטים ודוגמאות קצרות. הספר מכסה את כל הזווית הטכניות ונותן המלצות מעשיות על כל אחד מהנושאים הבאים:
    </p>
    <ul dir="rtl" class="green">
        <li>מי המציא תכנות מונחה עצמים ולמה</li>
        <li>בשביל מה צריך תכנות מונחה עצמים אם אפשר להסתדר בלי</li>
        <li>מחלקות אבסטרקטיות, מחלקות סופיות והרשאות גישה</li>
        <li>ארבעת עמודי הבסיס של תכנות מונחה עצמים: הורשה, כימוס, פולימורפיזם והפשטה</li>
        <li>המילה החשובה ביותר בתכנות מונחה עצמים: Interface</li>
        <li>מאפיינים, מתודות, וקונטסטרקטורים</li>
        <li>מעלים את איכות הקוד עם קבועים</li>
        <li>איך לירות לעצמך ברגל עם מתודות קסם. הרשימה המלאה</li>
        <li>מה זה סטטי ולמה לא ב-PHP ?</li>
        <li>תכונות של מחלקות וירושה כפולה</li>
        <li>איך ללכת מכות נכון עם ניימספייסים</li>
    </ul>

    <form action="https://www.paypal.com/cgi-bin/webscr" method="post" target="_top" data-buy-form="true" class="buy-oop-book-form">
        <input type="hidden" name="cmd" value="_s-xclick">
        <input type="hidden" name="hosted_button_id" value="5JCVNDA2SK3RL">

        <div style="font-size:1.5em; color:#505aff; margin:20px 0 5px">
            <?= number_format(Yii::app()->params['products']['oopbook']['price'], 2); ?>
            &#8362; בלבד
        </div>

        <input type="image" src="https://www.paypalobjects.com/he_IL/IL/i/btn/btn_buynowCC_LG.gif" border="0" data-buy-button="true" name="submit" alt="">
    </form>

    <div style="text-align: center">
        הספר, בגרסת pdf, נשלח אל כתובת האימייל שממנה מבוצע התשלום
    </div>

</div>
<!--
<br/><br/>

<div class='propositionBlock'>
    אופציה א'
    <h3>
        תכנות מונחה עצמים מאפס – הספר
    </h3>
    <p>
        הספר הכי פשוט והכי ברור על תכנות מונחה עצמים מהכי התחלה. כל נושא תכנות מונחה העצמים בשפת PHP במקום אחד עם הסברים פשוטים ודוגמאות קצרות. הספר מכסה את כל הזווית הטכניות ונותן המלצות מעשיות על כל אחד מהנושאים הבאים:
    </p>
    <ul dir="rtl" class="green">
        <li>מי המציא תכנות מונחה עצמים ולמה</li>
        <li>בשביל מה צריך תכנות מונחה עצמים אם אפשר להסתדר בלי</li>
        <li>מחלקות אבסטרקטיות, מחלקות סופיות והרשאות גישה</li>
        <li>ארבעת עמודי הבסיס של תכנות מונחה עצמים: הורשה, כימוס, פולימורפיזם והפשטה</li>
        <li>המילה החשובה ביותר בתכנות מונחה עצמים: Interface</li>
        <li>מאפיינים, מתודות, וקונטסטרקטורים</li>
        <li>מעלים את איכות הקוד עם קבועים</li>
        <li>איך לירות לעצמך ברגל עם מתודות קסם. הרשימה המלאה</li>
        <li>מה זה סטטי ולמה לא ב-PHP ?</li>
        <li>תכונות של מחלקות וירושה כפולה</li>
        <li>איך ללכת מכות נכון עם ניימספייסים</li>
    </ul>

    <form action="https://www.paypal.com/cgi-bin/webscr" method="post" target="_top">
        <input type="hidden" name="cmd" value="_s-xclick">
        <input type="hidden" name="hosted_button_id" value="5JCVNDA2SK3RL">
        <input type="image" src="https://www.paypalobjects.com/he_IL/IL/i/btn/btn_buynowCC_LG.gif" border="0" name="submit" alt="PayPal - הדרך הקלה והבטוחה לשלם באינטרנט!">
        <img alt="" border="0" src="https://www.paypalobjects.com/en_US/i/scr/pixel.gif" width="1" height="1">
    </form>

    <div style="text-align: center">
        הספר, בגרסת pdf, נשלח אל כתובת האימייל שממנה מבוצע התשלום
    </div>

</div>

<p dir="RTL"><u>בלוק ספר 2</u></p>
-->
<h2 dir="RTL">אחריות מנצחת: החזר כספי מלא למשך 60 יום בלי לשאול שאלות</h2>

<p dir="RTL">אתה לא לוקח סיכונים. הספר מגיע עם <strong>אחריות מלאה ל-100% החזר כספי מלא למשך 60 ימים</strong>. במילים פשוטות &ndash; אם לא תאהב את הספר, שלח לי אימייל, ותקבל את כל כספך בחזרה, בלי לשאול שאלות.</p>

<p dir="RTL">
    כן, אתה אפילו יכול לקרוא את הספר בחינם למשך חודשיים, לשלוח לי אימייל, ובכל זאת, לקבל בחזרה את כל כספך, למרות שאני בטוח שאתה תאהב אותו, בדיוק כמו האנשים שקראו אותו
    <!-- ואמרו את הדברים הבאים:
</p>

<h2 dir="RTL">מה אמרו מי שקראו את הספר:</h2>

<p dir="RTL">
    <img src="http://img842.imageshack.us/img842/8103/8bw5.png" alt="" />
    -->
</p>

<h2 dir="RTL">האם הספר הזה בשבילך?</h2>

<p dir="RTL">אם אתה רוצה להיכנס לעולם התכנות מונחה עצמים - בהחלט כן, אבל לפני כן צריך להיות לך ידע בסיסי ב-PHP. &nbsp;<br />
    אם אתה<br />
    &nbsp;- יודע&nbsp;ליצור ולקרוא לפונקציות שמקבלות פרמטרים ומחזירות ערכים;<br />
    &nbsp;- מבין במערכים מספריים ואסוציאטיביים;<br />
    &nbsp;- מכיר את טיפוסי הנתונים הבסיסיים: מחרוזת, בוליאנים וכו&#39;;<br />
    &nbsp;- יודע מה זה include ו-require ומפריד את הקוד לקבצים שונים;<br />
    אז הספר הזה בשבילך.</p>

<p dir="RTL">אם אחד הסעיפים ברשימה הזו לא נכון לגביך, או PHP היא שפת התכנות הראשונה שלך והתחלת ללמוד אותה לפני פחות מחצי שנה -&nbsp;<strong>אל תקנה את הספר הזה</strong>. הוא עומד לבלבל אותך יותר מאשר לעזור לך.</p>

<h2 dir="RTL">מה אם בכל זאת לא אבין שום דבר?</h2>

<p dir="RTL">מדריכים שונים באינטרנט שוכחים לענות על השאלה העיקרית &ndash; מה תרוויח מתכנות מונחה עצמים. חשוב להבין שלקרוא על תכנות מונחה עצמים זה כמו לקרוא על חוויות מגלישת סקי בחרמון. תיאור מילולי של ירידה במורד לא משתווה להרגשה האמיתית של האדרנלין בדם והבריז הקריר לפנים. הסבר, בין אם קצר או בין אם ארוך, על תכנות מונחה עצמים לא שווה הרבה בלי שתנסה. אבל, יש פתרון.</p>

<p dir="RTL">ראשית, לרשותך עומדת הקהילה ופורום פעיל באתר שבו תמיד תוכל לשאול שאלות ולקבל הסברים נוספים. שנית, הספר משלב בתוכו דוגמאות, שאלות ותרגילים שתוכל להתעמק ולבצע. אם תעקוב אחר אלו ותבצע את התרגילים המוצאים אני מבטיח שלא רק תבין, אלא גם תוכל להרגיש בעצמך את השיפור. כמובן שאם תחליט שלא תרצה להשקיע או שזה לא בשבילך מכל סיבה שהיא &ndash; תוכל לקבל את מלוא כספך בחזרה. לאומת זאת, תאר לעצמך את ההרגשה כשתסיים לקרוא את הספר ותבין הכול.</p>

<h2 dir="RTL">מה אם אבין הכול?</h2>

<p dir="RTL">אחרי שתלמד ותבין את כל הנושאים הקשורים לתכנות מונחה עצמים &ndash; תוכל לעשות מה שעד היום לא יכולת:</p>

<ul dir="rtl" class="green">
    <li>לפתח אתרים ומערכות גדולות יותר תוך כדי שמירה על סדר</li>
    <li>להעלות רמה ביכולות הפיתוח שלך</li>
    <li>להעלות את הביצועים שלך &ndash; להספיק יותר בפחות זמן</li>
    <li>לעבוד בצוות בצורה קלה יותר תוך כדי הסכמה על אינטרפייסים ומניעת שגיאות של מתכנתים אחרים</li>
    <li>לכתוב קוד איכותי, עמיד יותר בפני שגיאות וקל יותר לתחזוק</li>
    <li>לנצל קוד מפרוייקט לפרוייקט</li>
    <li>לדרוש משכורת יותר גבוה בעתיד</li>
    <li>להבין ולנצל קוד של אנשים אחרים מתוך ספריות שונות ולחסוך זמן פיתוח</li>
    <li>לבדוק איכות קוד בצורה אוטומטית</li>
</ul>

<p dir="RTL">מהרשימה הזו אפשר לראות למה מליוני מתכנתים בכל העולם מעדיפים תכנות מונחה עצמים על גבי תכנות פרוצדורלי. השאלה היא האם אתה רוצה ומוכן ללמוד? אם כן &ndash; הנא בדיוק מה שאתה צריך.</p>


<div class='propositionBlock'>
    <!-- אופציה א' -->
    <h3>
        תכנות מונחה עצמים מאפס – הספר
    </h3>
    <p>
        הספר הכי פשוט והכי ברור על תכנות מונחה עצמים מהכי התחלה. כל נושא תכנות מונחה העצמים בשפת PHP במקום אחד עם הסברים פשוטים ודוגמאות קצרות. הספר מכסה את כל הזווית הטכניות ונותן המלצות מעשיות על כל אחד מהנושאים הבאים:
    </p>
    <ul dir="rtl" class="green">
        <li>מי המציא תכנות מונחה עצמים ולמה</li>
        <li>בשביל מה צריך תכנות מונחה עצמים אם אפשר להסתדר בלי</li>
        <li>מחלקות אבסטרקטיות, מחלקות סופיות והרשאות גישה</li>
        <li>ארבעת עמודי הבסיס של תכנות מונחה עצמים: הורשה, כימוס, פולימורפיזם והפשטה</li>
        <li>המילה החשובה ביותר בתכנות מונחה עצמים: Interface</li>
        <li>מאפיינים, מתודות, וקונטסטרקטורים</li>
        <li>מעלים את איכות הקוד עם קבועים</li>
        <li>איך לירות לעצמך ברגל עם מתודות קסם. הרשימה המלאה</li>
        <li>מה זה סטטי ולמה לא ב-PHP ?</li>
        <li>תכונות של מחלקות וירושה כפולה</li>
        <li>איך ללכת מכות נכון עם ניימספייסים</li>
    </ul>

    <form action="https://www.paypal.com/cgi-bin/webscr" method="post" target="_top" data-buy-form="true" class="buy-oop-book-form">
        <input type="hidden" name="cmd" value="_s-xclick">
        <input type="hidden" name="hosted_button_id" value="5JCVNDA2SK3RL">

        <div style="font-size:1.5em; color:#505aff; margin:20px 0 5px">
            <?= number_format(Yii::app()->params['products']['oopbook']['price'], 2); ?>
             &#8362; בלבד
        </div>

        <input type="image" src="https://www.paypalobjects.com/he_IL/IL/i/btn/btn_buynowCC_LG.gif" data-buy-button="true" alt="">
    </form>

    <div style="text-align: center">
        הספר, בגרסת pdf, נשלח אל כתובת האימייל שממנה מבוצע התשלום
    </div>

</div>


<p dir="RTL">&nbsp;</p>

<h2 dir="RTL">הגיע הזמן לעבור מ-<span dir="LTR">PHP4</span> ל-<span dir="LTR">PHP5</span></h2>

<p dir="RTL">הבדל אחד עיקרי מבדיל בין גרסת <span dir="LTR">php4</span> לבין גרסת <span dir="LTR">php5</span> והוא תמיכה בתכנות מונחה עצמים. עד <span dir="LTR">php5</span> השפה כמעט ולא תמכה בתכנות מונחה עצמים וסיפקה סט קטן מאוד של אפשרויות שכל שפת תכנות מודרנית אחרת סיפקה כבר מזמן.</p>

<p dir="RTL">עם יציאתה של של <span dir="LTR">PHP5</span> נוספו לשפה מאות אפשרויות חדשות לתכנות מונחה עצמים שעליהם אתה הולך ללמוד, ואם אתה עדיין לא מנצל את היכולות של השפה בצורה מלאה &ndash; יכול להיות שהגיע הזמן, סוף סוף, להתקדם מ-<span dir="LTR">php4</span> ל-<span dir="LTR">php5</span> !</p>



</div>
</div>
</div>